rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    match /users/{userId} {
      allow read: if isLoggedIn();
      allow write: if belongsTo(userId);
  	}
    
    match /rooms/{docId} {
      allow read: if isLoggedIn();
      allow create: if canCreateRoom();
      allow update: if request.auth.uid == resource.data.leadId
                   && request.resource.data.keys().hasOnly(['text', 'status']);
      allow delete: if request.auth.uid == resource.data.leadId;
      
      match /{document=**} {
      	allow read: if true;
      	allow write: if true;
    	}
      // match /users/{userId} {
      // 	allow read: if isLoggedIn();
      // 	allow write: if request.auth.uid == userId;
      // }
		}
    
    
    function isLoggedIn() { 
      return request.auth.uid != null;
    }
    
    // function isDataPublished() {
    // 	return resource.data.status == 'published'
    // }

    function belongsTo(userId) {    
      return request.auth.uid == userId || request.auth.uid == resource.data.leadId;
    }

    function canCreateRoom() {
    	let isOwner = request.auth.uid == request.resource.data.leadId;
      // let hasValidTimestamp = request.time == request.resource.data.createdAt;

      return isOwner; //&& hasValidTimestamp;
    }
  }
}